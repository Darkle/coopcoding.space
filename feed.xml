<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coop...Coding</title>
    <description>Coop&#39;s coding blog</description>
    <link>http://coopcoding.com/</link>
    <atom:link href="http://coopcoding.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 06 Apr 2015 15:14:56 +1000</pubDate>
    <lastBuildDate>Mon, 06 Apr 2015 15:14:56 +1000</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>My Jekyll Setup For This Blog</title>
        <description>&lt;p&gt;So I wanted to set up a coding blog I decided on using &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; because it’s relatively easy to set up and there’s tons of good info &amp;amp; tutorials on the web. I briefly played around with &lt;a href=&quot;http://gohugo.io/&quot;&gt;Hugo&lt;/a&gt;, and although the documentation on the site is really good, I didn’t find much in the way of tutorial and articles from 3rd-party sites, so I stuck with Jekyll.&lt;/p&gt;

&lt;h3 id=&quot;blog-structure&quot;&gt;Blog Structure&lt;/h3&gt;

&lt;p&gt;For the site structure, I wanted it to be &lt;code&gt;coopcoding.com/projects/projectname/&lt;/code&gt; and &lt;code&gt;coopcoding.com/blog/blog post title/&lt;/code&gt;. This turned out to be a bit more difficult than I first envisioned. The &lt;code&gt;coopcoding.com/blog/blog post title/&lt;/code&gt; was fairly easy to set up, but &lt;code&gt;coopcoding.com/projects/projectname/&lt;/code&gt; took a bit of work.&lt;/p&gt;

&lt;p&gt;At first I thought I would use the &lt;a href=&quot;http://jekyllrb.com/docs/pages/&quot;&gt;default&lt;/a&gt; way of creating pages and just stick them in the &lt;code&gt;coopcoding.com/projects/&lt;/code&gt; folder, but unfortunately there is currently (jekyll 2.5.3) no way to iterate through all the pages in a directory.&lt;/p&gt;

&lt;p&gt;What I ended up doing was creating only blog posts and giving them either a “blog” category or a “projects” category. Then I used tags for if I wanted to show a grouping of posts or projects, e.g. if I was creating a blog post or a project about a chrome extension, in the yaml front matter for that post I would write something like:&lt;/p&gt;

&lt;pre class=&quot;line-numbers&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;---
title:  &quot;My Chrome Extension Project&quot;
date:   2015-02-15 10:14:35
tags:
  -Chrome Extension
  -Browser
summary: &quot;This is the summary for the chrome extension project&quot;
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then in my _config.yml I put the following:&lt;/p&gt;

&lt;pre class=&quot;line-numbers&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;permalink: /:categories/:title
defaults:
  -
    scope:
      path: &quot;blog&quot;
      type: &quot;posts&quot;
    values:
      layout: &quot;post&quot;
      category: &quot;blog&quot;
  -
    scope:
      path: &quot;projects&quot;
      type: &quot;posts&quot;
    values:
      layout: &quot;project&quot;
      category: &quot;projects&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;permalink: /:categories/:title&lt;/code&gt; tells jekyll to spit out all the posts in the &lt;code&gt;_posts&lt;/code&gt; folder and take what category they are (in this case either a blog or project) and create subfolders in the output directory of &lt;code&gt;coopcoding.com/projects/&lt;/code&gt; &amp;amp; &lt;code&gt;coopcoding.com/blog/&lt;/code&gt; and generate all the blog posts in those subdirectories for each category.&lt;/p&gt;

&lt;p&gt;Then I created an index.html page inside of the &lt;code&gt;/projects/&lt;/code&gt; folder and inside of the &lt;code&gt;/blog/&lt;/code&gt; folder. These were so that when a user visited &lt;code&gt;coopcoding.com/projects/&lt;/code&gt;, they would be shown a list of the latest project pages, and when they visited &lt;code&gt;coopcoding.com/blog/&lt;/code&gt;, they would be shown a list of the latest blog posts.&lt;/p&gt;

&lt;p&gt;Here are screenshots of my Jekyll folder structure to better explain it:&lt;br /&gt;
&lt;img src=&quot;/assets/images/blogpostimages/jek-folder-ss.png&quot; alt=&quot;Jekyll Folder Structure&quot; /&gt;&lt;br /&gt;
and a screenshot of Jekyll’s output folder structure:&lt;br /&gt;
&lt;img src=&quot;/assets/images/blogpostimages/jek-build-folder-structure.png&quot; alt=&quot;Jekyll Output Folder Structure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here is the html for the index.html in the &lt;code&gt;/projects/&lt;/code&gt; folder:&lt;/p&gt;

&lt;pre class=&quot;line-numbers&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;---
layout: default
cssBodyClass: projects-page
title: Coop.Coding Projects
---

&amp;lt;section class=&quot;projects&quot;&amp;gt;

  
  &amp;lt;a href=&quot;/projects/cabin&quot; class=&quot;project-listing&quot;&amp;gt;
      &amp;lt;div class=&quot;img-wrapper&quot;&amp;gt;
        &amp;lt;img class=&quot;project-screenshot-img&quot; src=&quot;http://coopcoding.com/assets/images/projectbranding/cabin.jpg&quot; alt=&quot; branding image&quot;&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;svg class=&quot;project-screenshot-svg&quot;&amp;gt;
          &amp;lt;image xlink:href=&quot;http://coopcoding.com/assets/images/projectbranding/cabin.jpg&quot; x=&quot;0&quot; y=&quot;-62&quot; width=&quot;100%&quot; height=&quot;174&quot;/&amp;gt;
      &amp;lt;/svg&amp;gt;

      &amp;lt;div class=&quot;project-details&quot;&amp;gt;

        &amp;lt;h2 class=&quot;project-title&quot;&amp;gt;Cabin&amp;lt;/h2&amp;gt;

        &amp;lt;p class=&quot;project-description&quot;&amp;gt;This is the summary for the cabin project&amp;lt;/p&amp;gt;

      &amp;lt;/div&amp;gt;

  &amp;lt;/a&amp;gt;
  

&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see I’m looping over the &lt;code&gt;site.categories.projects&lt;/code&gt; and listing each post in the “projects” category.&lt;/p&gt;

&lt;p&gt;It’s pretty much the same for the html in the index.html in the &lt;code&gt;/blog/&lt;/code&gt; folder:&lt;/p&gt;

&lt;pre class=&quot;line-numbers&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;---
layout: default
cssBodyClass: blog-posts
title: Coop.Coding Blog
---

&amp;lt;section class=&quot;recent-blog-posts&quot;&amp;gt;

  &amp;lt;div class=&quot;section-headings&quot;&amp;gt;
    &amp;lt;a href=&quot;http://coopcoding.com/blog/&quot;&amp;gt;
      &amp;lt;h1&amp;gt;Blog Posts&amp;lt;/h1&amp;gt;
    &amp;lt;/a&amp;gt;
  &amp;lt;/div&amp;gt;

  
  &amp;lt;article&amp;gt;
    &amp;lt;header&amp;gt;
      &amp;lt;h2&amp;gt;
        &amp;lt;a class=&quot;post-link-header&quot; href=&quot;/blog/my-jekyll-setup-for-this-blog&quot;&amp;gt;My Jekyll Setup For This Blog&amp;lt;/a&amp;gt;
      &amp;lt;/h2&amp;gt;
      &amp;lt;span class=&quot;post-date&quot;&amp;gt;Apr 6, 2015&amp;lt;/span&amp;gt;
    &amp;lt;/header&amp;gt;

    &amp;lt;section class=&quot;blog-post-section&quot;&amp;gt;
      So I wanted to set up a coding blog I decided on using [Jekyll](http://jekyllrb.com/) because it’s relatively easy to set up and there’s tons of good info &amp;amp; tutorials on the web. I briefly played around with [Hugo](http://gohugo.io/), and although the documentation on the site is really good, I didn’t find much in the way of tutorial and articles from 3rd-party sites, so I stuck with Jekyll. ### Blog Structure For the site structure, I...

      &amp;lt;div class=&quot;gradient-hide&quot;&amp;gt;&amp;lt;/div&amp;gt;

    &amp;lt;/section&amp;gt;

    &amp;lt;section class=&quot;blog-post-section&quot;&amp;gt;
      &amp;lt;a class=&quot;full-article-link&quot; href=&quot;/blog/my-jekyll-setup-for-this-blog&quot;&amp;gt;Read Full Article&amp;lt;/a&amp;gt;
    &amp;lt;/section&amp;gt;

    &amp;lt;footer&amp;gt;
      &amp;lt;ul class=&quot;tags&quot;&amp;gt;
      
        &amp;lt;li class=&quot;tag-item&quot;&amp;gt;
          &amp;lt;a href=&quot;http://coopcoding.com/tag/Jekyll&quot;&amp;gt;Jekyll&amp;lt;/a&amp;gt;
          &amp;lt;!-- &amp;lt;span class=&quot;tag-description&quot;&amp;gt;Find articles tagged &amp;amp;quot;foo1&amp;amp;quot;&amp;lt;/span&amp;gt; --&amp;gt;
        &amp;lt;/li&amp;gt;
      
        &amp;lt;li class=&quot;tag-item&quot;&amp;gt;
          &amp;lt;a href=&quot;http://coopcoding.com/tag/Alfred&quot;&amp;gt;Alfred&amp;lt;/a&amp;gt;
          &amp;lt;!-- &amp;lt;span class=&quot;tag-description&quot;&amp;gt;Find articles tagged &amp;amp;quot;foo1&amp;amp;quot;&amp;lt;/span&amp;gt; --&amp;gt;
        &amp;lt;/li&amp;gt;
      
      &amp;lt;/ul&amp;gt;
    &amp;lt;/footer&amp;gt;
  &amp;lt;/article&amp;gt;
  
  &amp;lt;article&amp;gt;
    &amp;lt;header&amp;gt;
      &amp;lt;h2&amp;gt;
        &amp;lt;a class=&quot;post-link-header&quot; href=&quot;/blog/blog-test-post&quot;&amp;gt;Blog Test Post&amp;lt;/a&amp;gt;
      &amp;lt;/h2&amp;gt;
      &amp;lt;span class=&quot;post-date&quot;&amp;gt;Mar 17, 2015&amp;lt;/span&amp;gt;
    &amp;lt;/header&amp;gt;

    &amp;lt;section class=&quot;blog-post-section&quot;&amp;gt;
      &amp;lt;p&amp;gt;Cum sociis natoque penatibus et magnis &amp;lt;a href=&quot;http://example.com/&quot; title=&quot;dis parturient montes&quot;&amp;gt;dis parturient montes&amp;lt;/a&amp;gt;, nascetur ridiculus mus. &amp;lt;em&amp;gt;Aenean eu leo quam.&amp;lt;/em&amp;gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&amp;lt;/p&amp;gt; &amp;lt;blockquote&amp;gt; &amp;lt;p&amp;gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&amp;lt;/p&amp;gt; &amp;lt;/blockquote&amp;gt; &amp;lt;p&amp;gt;Etiam porta &amp;lt;em&amp;gt;sem malesuada magna&amp;lt;/em&amp;gt; mollis euismod. Cras mattis...

      &amp;lt;div class=&quot;gradient-hide&quot;&amp;gt;&amp;lt;/div&amp;gt;

    &amp;lt;/section&amp;gt;

    &amp;lt;section class=&quot;blog-post-section&quot;&amp;gt;
      &amp;lt;a class=&quot;full-article-link&quot; href=&quot;/blog/blog-test-post&quot;&amp;gt;Read Full Article&amp;lt;/a&amp;gt;
    &amp;lt;/section&amp;gt;

    &amp;lt;footer&amp;gt;
      &amp;lt;ul class=&quot;tags&quot;&amp;gt;
      
        &amp;lt;li class=&quot;tag-item&quot;&amp;gt;
          &amp;lt;a href=&quot;http://coopcoding.com/tag/foo1&quot;&amp;gt;foo1&amp;lt;/a&amp;gt;
          &amp;lt;!-- &amp;lt;span class=&quot;tag-description&quot;&amp;gt;Find articles tagged &amp;amp;quot;foo1&amp;amp;quot;&amp;lt;/span&amp;gt; --&amp;gt;
        &amp;lt;/li&amp;gt;
      
        &amp;lt;li class=&quot;tag-item&quot;&amp;gt;
          &amp;lt;a href=&quot;http://coopcoding.com/tag/foo2&quot;&amp;gt;foo2&amp;lt;/a&amp;gt;
          &amp;lt;!-- &amp;lt;span class=&quot;tag-description&quot;&amp;gt;Find articles tagged &amp;amp;quot;foo1&amp;amp;quot;&amp;lt;/span&amp;gt; --&amp;gt;
        &amp;lt;/li&amp;gt;
      
      &amp;lt;/ul&amp;gt;
    &amp;lt;/footer&amp;gt;
  &amp;lt;/article&amp;gt;
  

&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For generating “tag” pages, I used the code and process listed &lt;a href=&quot;http://charliepark.org/tags-in-jekyll/&quot;&gt;here&lt;/a&gt;. You can see the tag pages output in the screenshot of Jekyll’s output folder structure above.&lt;/p&gt;

&lt;h3 id=&quot;blog--project-layouts&quot;&gt;Blog &amp;amp; Project Layouts&lt;/h3&gt;

&lt;p&gt;Obviously I wanted to have different layouts for the blog post and project posts, so I used the following in my &lt;code&gt;_config.yml&lt;/code&gt;:&lt;/p&gt;

&lt;pre class=&quot;line-numbers&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;defaults:
  -
    scope:
      path: &quot;blog&quot;
      type: &quot;posts&quot;
    values:
      layout: &quot;post&quot;
      category: &quot;blog&quot;
  -
    scope:
      path: &quot;projects&quot;
      type: &quot;posts&quot;
    values:
      layout: &quot;project&quot;
      category: &quot;projects&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This tells Jekyll that for posts in that end up in the path &lt;code&gt;coopcoding.com/blog/&lt;/code&gt; and are of the type “posts” that they are all in the category of “blog” and should use the layout “post”. The layout of “post” corresponds to the &lt;code&gt;post.html&lt;/code&gt; in the &lt;code&gt;_layouts directory&lt;/code&gt;. It then tells Jekyll that for posts in that end up in the path &lt;code&gt;coopcoding.com/projects/&lt;/code&gt; and are of the type “posts” that they are all in the category of “projects” and should use the layout “project”. The layout of “post” corresponds to the &lt;code&gt;project.html&lt;/code&gt; in the &lt;code&gt;_layouts directory&lt;/code&gt;. You can check out the html for those files here: https://github.com/Darkle/coopcoding.com_jekyll_version/tree/master/_layouts&lt;/p&gt;

&lt;p&gt;(you can also see my complete &lt;code&gt;_config.yml&lt;/code&gt; here: https://github.com/Darkle/coopcoding.com_jekyll_version/blob/master/_config.yml)&lt;/p&gt;

&lt;h3 id=&quot;syntax-highlighting&quot;&gt;Syntax Highlighting&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/templates/#code-snippet-highlighting&quot;&gt;Pygments&lt;/a&gt; is the default syntax highlighter for Jekyll. It’s pretty good, but I didn’t really like the syntax that you have to use for code blocks:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
&amp;lt;div class=&quot;highlight&quot;&amp;gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&amp;gt;&amp;lt;span class=&quot;k&quot;&amp;gt;def&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;nf&quot;&amp;gt;foo&amp;lt;/span&amp;gt;
  &amp;lt;span class=&quot;nb&quot;&amp;gt;puts&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;s1&quot;&amp;gt;&amp;amp;#39;foo&amp;amp;#39;&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;k&quot;&amp;gt;end&amp;lt;/span&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Luckily, the Kramdown &lt;a href=&quot;http://jekyllrb.com/docs/configuration/#kramdown&quot;&gt;markdown interpreter in Jekyll supports&lt;/a&gt; Github Flavoured Markdown, specifically the &lt;a href=&quot;https://help.github.com/articles/github-flavored-markdown/#syntax-highlighting&quot;&gt;code blocks&lt;/a&gt;. With this enabled, a code block like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;``` ruby
def print_hi(name)
  puts &quot;Hi, #{name}&quot;
end
print_hi(&#39;Tom&#39;)
#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;will be render into this HTML:

&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;
def print_hi(name)
  puts &quot;Hi, #{name}&quot;
end
print_hi(&#39;Tom&#39;)
#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;I has some trouble getting the Jekyll built in syntax highlighters to work properly with line numbering, so I ended up using &lt;a href=&quot;http://prismjs.com/&quot;&gt;prism.js&lt;/a&gt;. It looks great and I figure so long as the javascript is at the bottom of the page and not blocking anything loading it should be fine and wont annoy people viewing the page. On the &lt;a href=&quot;http://prismjs.com/download.html&quot;&gt;prism.js download page&lt;/a&gt; you can pick and choose what languages to support, which is pretty neat.&lt;/p&gt;

&lt;p&gt;I wanted&lt;/p&gt;
</description>
        <pubDate>Mon, 06 Apr 2015 22:46:26 +1000</pubDate>
        <link>http://coopcoding.com/blog/my-jekyll-setup-for-this-blog</link>
        <guid isPermaLink="true">http://coopcoding.com/blog/my-jekyll-setup-for-this-blog</guid>
        
        <category>Jekyll</category>
        
        <category>Alfred</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Blog Test Post</title>
        <description>&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;http://example.com/&quot; title=&quot;dis parturient montes&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Etiam porta &lt;em&gt;sem malesuada magna&lt;/em&gt; mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.&lt;/p&gt;

&lt;h3 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;/h3&gt;

&lt;p&gt;HTML defines a long list of available inline tags, a complete list of which can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element&quot; title=&quot;Mozilla Developer Network&quot;&gt;Mozilla Developer Network&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;To bold text&lt;/strong&gt;, use &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
&lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;To bold text&lt;/em&gt;, use &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;To italicize text&lt;/em&gt;, use &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Abbreviations, like &lt;abbr title=&quot;HyperText Markup Langage&quot;&gt;HTML&lt;/abbr&gt; should use &lt;code&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt;, with an optional &lt;code&gt;title&lt;/code&gt; attribute for the full phrase.&lt;/li&gt;
  &lt;li&gt;Citations, like &lt;cite&gt;— Mark otto&lt;/cite&gt;, should use &lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;del&gt;Deleted&lt;/del&gt; text should use &lt;code&gt;&amp;lt;del&amp;gt;&lt;/code&gt; and &lt;ins&gt;inserted&lt;/ins&gt; text should use &lt;code&gt;&amp;lt;ins&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Superscript &lt;sup&gt;text&lt;/sup&gt; uses &lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; and subscript &lt;sub&gt;text&lt;/sub&gt; uses &lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these elements are styled by browsers with few modifications on our part.&lt;/p&gt;

&lt;h2&gt;Heading&lt;/h2&gt;

&lt;p&gt;Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.&lt;/p&gt;

&lt;h3&gt;Code&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis &lt;code&gt;code element&lt;/code&gt; montes, nascetur ridiculus mus.&lt;/p&gt;
&lt;pre class=&quot;line-numbers&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;// Example can be run directly in your JavaScript console

// Create a function that takes two arguments and returns the sum of those arguments
var adder = new Function(&quot;a&quot;, &quot;b&quot;, &quot;return a + b&quot;);

// Call the function
adder(2, 6);
// &amp;gt; 8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.&lt;/p&gt;

&lt;h3&gt;Gists via GitHub Pages&lt;/h3&gt;

&lt;p&gt;Vestibulum id ligula porta felis euismod semper. Nullam quis risus eget urna mollis ornare vel eu leo. Donec sed odio dui.&lt;/p&gt;

&lt;p&gt;Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Nullam quis risus eget urna mollis ornare vel eu leo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec sed odio dui. Vestibulum id ligula porta felis euismod semper.&lt;/p&gt;

&lt;h3&gt;Lists&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Praesent commodo cursus magna, vel scelerisque nisl consectetur et.&lt;/li&gt;
&lt;li&gt;Donec id elit non mi porta gravida at eget metus.&lt;/li&gt;
&lt;li&gt;Nulla vitae elit libero, a pharetra augue.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Vestibulum id ligula porta felis euismod semper.&lt;/li&gt;
&lt;li&gt;Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.&lt;/li&gt;
&lt;li&gt;Maecenas sed diam eget risus varius blandit sit amet non magna.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.&lt;/p&gt;

&lt;dl&gt;
  &lt;dt&gt;HyperText Markup Language (HTML)&lt;/dt&gt;
  &lt;dd&gt;The language used to describe and define the content of a Web page&lt;/dd&gt;

  &lt;dt&gt;Cascading Style Sheets (CSS)&lt;/dt&gt;
  &lt;dd&gt;Used to describe the appearance of Web content&lt;/dd&gt;

  &lt;dt&gt;JavaScript (JS)&lt;/dt&gt;
  &lt;dd&gt;The programming language used to build advanced Web sites and applications&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;h3&gt;Images&lt;/h3&gt;

&lt;p&gt;Quisque consequat sapien eget quam rhoncus, sit amet laoreet diam tempus. Aliquam aliquam metus erat, a pulvinar turpis suscipit at.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://placehold.it/800x400&quot; alt=&quot;placeholder&quot; title=&quot;Large example image&quot; /&gt;
&lt;img src=&quot;http://placehold.it/400x200&quot; alt=&quot;placeholder&quot; title=&quot;Medium example image&quot; /&gt;
&lt;img src=&quot;http://placehold.it/200x200&quot; alt=&quot;placeholder&quot; title=&quot;Small example image&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;Tables&lt;/h3&gt;

&lt;p&gt;Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;Name&lt;/th&gt;
    &lt;th&gt;Upvotes&lt;/th&gt;
    &lt;th&gt;Downvotes&lt;/th&gt;
  &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tfoot&gt;
  &lt;tr&gt;
    &lt;td&gt;Totals&lt;/td&gt;
    &lt;td&gt;21&lt;/td&gt;
    &lt;td&gt;23&lt;/td&gt;
  &lt;/tr&gt;
  &lt;/tfoot&gt;
  &lt;tbody&gt;
  &lt;tr&gt;
    &lt;td&gt;Alice&lt;/td&gt;
    &lt;td&gt;10&lt;/td&gt;
    &lt;td&gt;11&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Bob&lt;/td&gt;
    &lt;td&gt;4&lt;/td&gt;
    &lt;td&gt;3&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Charlie&lt;/td&gt;
    &lt;td&gt;7&lt;/td&gt;
    &lt;td&gt;9&lt;/td&gt;
  &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Nullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.&lt;/p&gt;

&lt;hr /&gt;

&lt;video controls=&quot;&quot;&gt;
  &lt;source src=&quot;http://www.w3schools.com/html/mov_bbb.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;http://www.w3schools.com/html/mov_bbb.ogg&quot; type=&quot;video/ogg&quot; /&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;
&lt;hr /&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/OsV5RQtmBVw&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;hr /&gt;

</description>
        <pubDate>Tue, 17 Mar 2015 16:20:35 +1100</pubDate>
        <link>http://coopcoding.com/blog/blog-test-post</link>
        <guid isPermaLink="true">http://coopcoding.com/blog/blog-test-post</guid>
        
        <category>foo1</category>
        
        <category>foo2</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Cabin</title>
        <description>&lt;h3 id=&quot;description&quot;&gt;Description:&lt;/h3&gt;

&lt;p&gt;Cum sociis natoque penatibus et magnis &lt;a href=&quot;#&quot;&gt;dis parturient montes&lt;/a&gt;, nascetur ridiculus mus. &lt;em&gt;Aenean eu leo quam.&lt;/em&gt; Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&lt;br /&gt;
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&lt;br /&gt;
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;pre class=&quot;line-numbers&quot;&gt;&lt;code class=&quot;language-ruby&quot;&gt;def print_hi(name)
  puts &quot;Hi, #{name}&quot;
end
print_hi(&#39;Tom&#39;)
#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;version-history&quot;&gt;Version History:&lt;/h3&gt;

&lt;ul class=&quot;version-history&quot;&gt;
  &lt;li&gt;0.5 Added feature y&lt;/li&gt;
  &lt;li&gt;0.4 Fixed the thing again&lt;/li&gt;
  &lt;li&gt;0.3 Added feature x&lt;/li&gt;
  &lt;li&gt;0.2 Fixed the thing&lt;/li&gt;
  &lt;li&gt;0.1 Initial Commit&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gradient-more&quot;&gt;&lt;/div&gt;
&lt;p&gt;&lt;a class=&quot;link-more&quot; href=&quot;#&quot;&gt;Show more&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;support&quot;&gt;Support:&lt;/h3&gt;

&lt;video controls=&quot;&quot;&gt;
  &lt;source src=&quot;http://www.w3schools.com/html/mov_bbb.mp4&quot; type=&quot;video/mp4&quot; /&gt;
  &lt;source src=&quot;http://www.w3schools.com/html/mov_bbb.ogg&quot; type=&quot;video/ogg&quot; /&gt;
  Your browser does not support HTML5 video.
&lt;/video&gt;
&lt;hr /&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/OsV5RQtmBVw&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;hr /&gt;

</description>
        <pubDate>Sun, 15 Feb 2015 21:14:35 +1100</pubDate>
        <link>http://coopcoding.com/projects/cabin</link>
        <guid isPermaLink="true">http://coopcoding.com/projects/cabin</guid>
        
        <category>foo1</category>
        
        <category>foo2</category>
        
        
        <category>projects</category>
        
      </item>
    
  </channel>
</rss>
